import logging
from logging import FileHandler

from flask import Flask
import os
# from flask_orator import Orator
from orator import DatabaseManager
from flask_restful import Api
import datetime
from flask_mail import Mail, Message
from werkzeug.contrib.fixers import ProxyFix
from reverseproxy import ReverseProxied
app = Flask(__name__)
app.wsgi_app = ProxyFix(app.wsgi_app)



app.config['ORATOR_DATABASES'] = {

}
config = {
    'development': {'database': 'database_name',
                    'driver': 'mysql',
                    'host': 'host_name',
                    'password': 'password',
                    'user': 'user'}
}

db = DatabaseManager(config)
app.wsgi_app = ReverseProxied(app.wsgi_app)

app.config['SECRET_KEY'] = "YOUR_SUPER_SECRET_KEY"
app.config['JWT_EXPIRATION_DELTA'] = datetime.timedelta(minutes=30)

app.config['MAIL_SERVER'] = 'your_mail_server'
app.config['MAIL_PORT'] = 465
app.config['MAIL_USERNAME'] = 'username'
app.config['MAIL_PASSWORD'] = 'password'
app.config['MAIL_USE_TLS'] = False
app.config['MAIL_USE_SSL'] = True
app.config['MAIL_DEFAULT_SENDER'] = app.config['MAIL_USERNAME']
#app.config['web-client'] = 'http://smartoutlet.herokuapp.com'
#app.config['pass-reset-url'] = app.config['web-client'] + '/index.html'

api = Api(app)
mail = Mail(app)

file_handler = FileHandler('output.log')
handler = logging.StreamHandler()
file_handler.setLevel(logging.DEBUG)
handler.setLevel(logging.DEBUG)
file_handler.setFormatter(logging.Formatter(
    '%(asctime)s %(levelname)s: %(message)s '
    '[in %(pathname)s:%(lineno)d]'
))
handler.setFormatter(logging.Formatter(
    '%(asctime)s %(levelname)s: %(message)s '
    '[in %(pathname)s:%(lineno)d]'
))
app.logger.addHandler(handler)
app.logger.addHandler(file_handler)